
const userCreate =
{
	data:
	{
		pedigree:
		{
			one: 0,
			two: 0,

			looks: 0.5,
			skin: 0.5
		},
		hair:
		{
			color: 0,

			head: 0,
			eyebrow: 0,
			beard: 0,
			breast: 0
		},
		face: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		appearance: [0, 0, 0, 0, 0, 0, 0, 0, 0]
	},

	hair:
	{
		head:
		{
			male: [ 0, 1, 2, 5, 8, 10, 56, 16, 21, 27 ],
			female: [ 0, 1, 2, 3, 6, 7, 12, 14, 27, 31 ]
		},
		eyebrow:
		{
			male: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32],
			female: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
		},
		beard:
		{
			male: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27],
			female: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27],
		},
		breast:
		{
			male: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
			female: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
		}
	},

	toggle: (toggle) =>
	{
		if(toggle === true)
		{
			$('#userCreate').show()

			$('#userCreate .info').slideDown(300)
			$('#userCreate .pers').animate({
				left: '30px'
			}, 500)
		}
		else
		{
			$('#userCreate .info').slideUp(300)
			$('#userCreate .pers').animate({
				left: '-100%'
			}, 500, () =>
			{
				$('#userCreate').hide()
			})
		}
	},

	setGender: (gender) =>
	{
		if(gender !== 'male'
			&& gender !== 'female')return

		$(`#userCreate .userCreate-gender`).removeClass('button-select')
		$(`#userCreate .userCreate-gender[data-gender=${gender}]`).addClass('button-select')

		userCreate.data =
		{
			pedigree:
			{
				one: 0,
				two: 0,

				looks: 0.5,
				skin: 0.5
			},
			hair:
			{
				color: 0,

				head: 0,
				eyebrow: 0,
				beard: 0,
				breast: 0
			},
			face: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			appearance: [0, 0, 0, 0, 0, 0, 0, 0, 0]
		}

		eval($('#userCreate .header-right button.header-select').attr('onclick'))
		userCreate.updateChar()
	},
	updateMenu: (page, underPage = 'default') =>
	{
		if(page !== 'pedigree'
			&& page !== 'hair'
			&& page !== 'settings')return

		const gender = $('#userCreate .userCreate-gender.button-select').attr('data-gender')
		if(gender !== 'male'
			&& gender !== 'female')
		{
			gender = 'male'
			setGender('male')
		}

		$('#userCreate .header button').removeClass('header-select')
		$(`#userCreate #userCreate-header-${page}`).addClass('header-select')

		switch(page)
		{
			case 'pedigree':
			{
				rage.send('ui::user:changeCameraCharacter', {
					camera: 'global'
				})
				if(underPage === 'default') underPage = 'one'

				$('#userCreate .header-right').html(`
					<button onclick="userCreate.updateMenu('pedigree', 'one')" ${underPage == 'one' ? 'class="header-select"' : ""}>
						<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 937.5 937.5"><path d="M 875 0 L 187.5 0 C 152.984375 0 125 27.984375 125 62.5 L 125 312.5 L 156.25 312.5 L 156.25 62.5 C 156.25 45.238281 170.238281 31.25 187.5 31.25 L 875 31.25 C 892.261719 31.25 906.25 45.238281 906.25 62.5 L 906.25 625 C 906.25 642.261719 892.261719 656.25 875 656.25 L 468.75 656.25 L 468.75 687.5 L 875 687.5 C 909.515625 687.5 937.5 659.515625 937.5 625 L 937.5 62.5 C 937.5 27.984375 909.515625 0 875 0 Z M 875 0 "  /><path d="M 187.5 62.5 L 218.75 62.5 L 218.75 93.75 L 187.5 93.75 Z M 187.5 62.5 "  /><path d="M 250 62.5 L 281.25 62.5 L 281.25 93.75 L 250 93.75 Z M 250 62.5 "  /><path d="M 312.5 62.5 L 343.75 62.5 L 343.75 93.75 L 312.5 93.75 Z M 312.5 62.5 "  /><path d="M 187.5 125 L 875 125 L 875 156.25 L 187.5 156.25 Z M 187.5 125 "  /><path d="M 734.375 437.5 L 875 437.5 L 875 468.75 L 734.375 468.75 Z M 734.375 437.5 "  /><path d="M 562.5 515.625 L 875 515.625 L 875 546.875 L 562.5 546.875 Z M 562.5 515.625 "  /><path d="M 640.625 281.25 L 812.5 281.25 L 812.5 312.5 L 640.625 312.5 Z M 640.625 281.25 "  /><path d="M 640.625 203.125 L 765.625 203.125 L 765.625 234.375 L 640.625 234.375 Z M 640.625 203.125 "  /><path d="M 796.875 203.125 L 875 203.125 L 875 234.375 L 796.875 234.375 Z M 796.875 203.125 "  /><path d="M 843.75 281.25 L 875 281.25 L 875 312.5 L 843.75 312.5 Z M 843.75 281.25 "  /><path d="M 640.625 359.375 L 875 359.375 L 875 390.625 L 640.625 390.625 Z M 640.625 359.375 "  /><path d="M 578.125 437.5 L 703.125 437.5 L 703.125 468.75 L 578.125 468.75 Z M 578.125 437.5 "  /><path d="M 734.375 593.75 L 875 593.75 L 875 625 L 734.375 625 Z M 734.375 593.75 "  /><path d="M 578.125 593.75 L 703.125 593.75 L 703.125 625 L 578.125 625 Z M 578.125 593.75 "  /><path d="M 281.25 281.25 L 281.25 250 C 281.25 241.367188 288.242188 234.375 296.875 234.375 L 328.125 234.375 L 328.125 203.125 L 296.875 203.125 C 270.992188 203.125 250 224.117188 250 250 L 250 274.78125 L 223.328125 301.453125 C 217.230469 307.558594 217.230469 317.441406 223.328125 323.546875 L 250 350.21875 L 250 375 C 250 400.882812 270.992188 421.875 296.875 421.875 L 328.125 421.875 L 328.125 390.625 L 296.875 390.625 C 288.242188 390.625 281.25 383.632812 281.25 375 L 281.25 343.75 C 281.25 339.605469 279.601562 335.632812 276.671875 332.703125 L 256.46875 312.5 L 276.671875 292.296875 C 279.601562 289.367188 281.25 285.394531 281.25 281.25 Z M 281.25 281.25 "  /><path d="M 562.5 375 L 562.5 350.21875 L 589.171875 323.546875 C 595.269531 317.441406 595.269531 307.558594 589.171875 301.453125 L 562.5 274.78125 L 562.5 250 C 562.5 224.117188 541.507812 203.125 515.625 203.125 L 484.375 203.125 L 484.375 234.375 L 515.625 234.375 C 524.257812 234.375 531.25 241.367188 531.25 250 L 531.25 281.25 C 531.25 285.394531 532.898438 289.367188 535.828125 292.296875 L 556.03125 312.5 L 535.828125 332.703125 C 532.898438 335.632812 531.25 339.605469 531.25 343.75 L 531.25 375 C 531.25 383.632812 524.257812 390.625 515.625 390.625 L 484.375 390.625 L 484.375 421.875 L 515.625 421.875 C 541.507812 421.875 562.5 400.882812 562.5 375 Z M 562.5 375 "  /><path d="M 328.125 328.125 L 359.375 328.125 L 359.375 359.375 L 328.125 359.375 Z M 328.125 328.125 "  /><path d="M 390.625 328.125 L 421.875 328.125 L 421.875 359.375 L 390.625 359.375 Z M 390.625 328.125 "  /><path d="M 453.125 328.125 L 484.375 328.125 L 484.375 359.375 L 453.125 359.375 Z M 453.125 328.125 "  /><path d="M 109.375 937.5 L 578.125 937.5 C 586.757812 937.5 593.75 930.507812 593.75 921.875 L 593.75 734.375 C 593.75 725.742188 586.757812 718.75 578.125 718.75 L 373.4375 718.75 L 518.1875 574 C 524.289062 567.898438 524.289062 558.007812 518.1875 551.90625 L 385.617188 419.328125 C 379.40625 413.46875 369.71875 413.46875 363.519531 419.328125 L 218.75 564.0625 L 218.75 359.375 C 218.75 350.742188 211.757812 343.75 203.125 343.75 L 15.625 343.75 C 6.992188 343.75 0 350.742188 0 359.375 L 0 828.125 C 0.0703125 888.5 49 937.429688 109.375 937.5 Z M 406.25 750 L 562.5 750 L 562.5 906.25 L 406.25 906.25 Z M 374.550781 452.464844 L 485.035156 562.949219 L 374.550781 673.4375 L 264.0625 562.949219 Z M 218.75 828.125 L 218.75 608.273438 L 241.96875 585.058594 L 352.453125 695.550781 L 218.75 829.296875 C 218.75 828.886719 218.75 828.515625 218.75 828.125 Z M 342.1875 750 L 375 750 L 375 906.25 L 185.84375 906.25 C 186.128906 905.96875 186.4375 905.734375 186.71875 905.460938 Z M 31.25 375 L 187.5 375 L 187.5 531.25 L 31.25 531.25 Z M 31.25 562.5 L 187.5 562.5 L 187.5 718.75 L 31.25 718.75 Z M 31.25 750 L 187.5 750 L 187.5 828.125 C 187.441406 858.976562 169.242188 886.890625 141.046875 899.390625 C 140.59375 899.609375 140.175781 899.925781 139.703125 900.109375 C 135.835938 901.664062 131.835938 902.90625 127.757812 903.832031 C 126.832031 904.058594 125.9375 904.488281 124.992188 904.667969 C 101.996094 909.355469 78.125 903.472656 59.960938 888.632812 C 41.796875 873.789062 31.25 851.585938 31.25 828.125 Z M 31.25 750 "  /><path d="M 109.375 875 C 135.257812 875 156.25 854.007812 156.25 828.125 C 156.25 802.242188 135.257812 781.25 109.375 781.25 C 83.492188 781.25 62.5 802.242188 62.5 828.125 C 62.5 854.007812 83.492188 875 109.375 875 Z M 109.375 812.5 C 118.007812 812.5 125 819.492188 125 828.125 C 125 836.757812 118.007812 843.75 109.375 843.75 C 100.742188 843.75 93.75 836.757812 93.75 828.125 C 93.75 819.492188 100.742188 812.5 109.375 812.5 Z M 109.375 812.5 "  /></svg>
						<span>Первый</span>
					</button>
					<button onclick="userCreate.updateMenu('pedigree', 'two')" ${underPage === 'two' ? "class='header-select'" : ""}>
						<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 937.5 937.5"><path d="M 875 0 L 187.5 0 C 152.984375 0 125 27.984375 125 62.5 L 125 312.5 L 156.25 312.5 L 156.25 62.5 C 156.25 45.238281 170.238281 31.25 187.5 31.25 L 875 31.25 C 892.261719 31.25 906.25 45.238281 906.25 62.5 L 906.25 625 C 906.25 642.261719 892.261719 656.25 875 656.25 L 468.75 656.25 L 468.75 687.5 L 875 687.5 C 909.515625 687.5 937.5 659.515625 937.5 625 L 937.5 62.5 C 937.5 27.984375 909.515625 0 875 0 Z M 875 0 "  /><path d="M 187.5 62.5 L 218.75 62.5 L 218.75 93.75 L 187.5 93.75 Z M 187.5 62.5 "  /><path d="M 250 62.5 L 281.25 62.5 L 281.25 93.75 L 250 93.75 Z M 250 62.5 "  /><path d="M 312.5 62.5 L 343.75 62.5 L 343.75 93.75 L 312.5 93.75 Z M 312.5 62.5 "  /><path d="M 187.5 125 L 875 125 L 875 156.25 L 187.5 156.25 Z M 187.5 125 "  /><path d="M 734.375 437.5 L 875 437.5 L 875 468.75 L 734.375 468.75 Z M 734.375 437.5 "  /><path d="M 562.5 515.625 L 875 515.625 L 875 546.875 L 562.5 546.875 Z M 562.5 515.625 "  /><path d="M 640.625 281.25 L 812.5 281.25 L 812.5 312.5 L 640.625 312.5 Z M 640.625 281.25 "  /><path d="M 640.625 203.125 L 765.625 203.125 L 765.625 234.375 L 640.625 234.375 Z M 640.625 203.125 "  /><path d="M 796.875 203.125 L 875 203.125 L 875 234.375 L 796.875 234.375 Z M 796.875 203.125 "  /><path d="M 843.75 281.25 L 875 281.25 L 875 312.5 L 843.75 312.5 Z M 843.75 281.25 "  /><path d="M 640.625 359.375 L 875 359.375 L 875 390.625 L 640.625 390.625 Z M 640.625 359.375 "  /><path d="M 578.125 437.5 L 703.125 437.5 L 703.125 468.75 L 578.125 468.75 Z M 578.125 437.5 "  /><path d="M 734.375 593.75 L 875 593.75 L 875 625 L 734.375 625 Z M 734.375 593.75 "  /><path d="M 578.125 593.75 L 703.125 593.75 L 703.125 625 L 578.125 625 Z M 578.125 593.75 "  /><path d="M 281.25 281.25 L 281.25 250 C 281.25 241.367188 288.242188 234.375 296.875 234.375 L 328.125 234.375 L 328.125 203.125 L 296.875 203.125 C 270.992188 203.125 250 224.117188 250 250 L 250 274.78125 L 223.328125 301.453125 C 217.230469 307.558594 217.230469 317.441406 223.328125 323.546875 L 250 350.21875 L 250 375 C 250 400.882812 270.992188 421.875 296.875 421.875 L 328.125 421.875 L 328.125 390.625 L 296.875 390.625 C 288.242188 390.625 281.25 383.632812 281.25 375 L 281.25 343.75 C 281.25 339.605469 279.601562 335.632812 276.671875 332.703125 L 256.46875 312.5 L 276.671875 292.296875 C 279.601562 289.367188 281.25 285.394531 281.25 281.25 Z M 281.25 281.25 "  /><path d="M 562.5 375 L 562.5 350.21875 L 589.171875 323.546875 C 595.269531 317.441406 595.269531 307.558594 589.171875 301.453125 L 562.5 274.78125 L 562.5 250 C 562.5 224.117188 541.507812 203.125 515.625 203.125 L 484.375 203.125 L 484.375 234.375 L 515.625 234.375 C 524.257812 234.375 531.25 241.367188 531.25 250 L 531.25 281.25 C 531.25 285.394531 532.898438 289.367188 535.828125 292.296875 L 556.03125 312.5 L 535.828125 332.703125 C 532.898438 335.632812 531.25 339.605469 531.25 343.75 L 531.25 375 C 531.25 383.632812 524.257812 390.625 515.625 390.625 L 484.375 390.625 L 484.375 421.875 L 515.625 421.875 C 541.507812 421.875 562.5 400.882812 562.5 375 Z M 562.5 375 "  /><path d="M 328.125 328.125 L 359.375 328.125 L 359.375 359.375 L 328.125 359.375 Z M 328.125 328.125 "  /><path d="M 390.625 328.125 L 421.875 328.125 L 421.875 359.375 L 390.625 359.375 Z M 390.625 328.125 "  /><path d="M 453.125 328.125 L 484.375 328.125 L 484.375 359.375 L 453.125 359.375 Z M 453.125 328.125 "  /><path d="M 109.375 937.5 L 578.125 937.5 C 586.757812 937.5 593.75 930.507812 593.75 921.875 L 593.75 734.375 C 593.75 725.742188 586.757812 718.75 578.125 718.75 L 373.4375 718.75 L 518.1875 574 C 524.289062 567.898438 524.289062 558.007812 518.1875 551.90625 L 385.617188 419.328125 C 379.40625 413.46875 369.71875 413.46875 363.519531 419.328125 L 218.75 564.0625 L 218.75 359.375 C 218.75 350.742188 211.757812 343.75 203.125 343.75 L 15.625 343.75 C 6.992188 343.75 0 350.742188 0 359.375 L 0 828.125 C 0.0703125 888.5 49 937.429688 109.375 937.5 Z M 406.25 750 L 562.5 750 L 562.5 906.25 L 406.25 906.25 Z M 374.550781 452.464844 L 485.035156 562.949219 L 374.550781 673.4375 L 264.0625 562.949219 Z M 218.75 828.125 L 218.75 608.273438 L 241.96875 585.058594 L 352.453125 695.550781 L 218.75 829.296875 C 218.75 828.886719 218.75 828.515625 218.75 828.125 Z M 342.1875 750 L 375 750 L 375 906.25 L 185.84375 906.25 C 186.128906 905.96875 186.4375 905.734375 186.71875 905.460938 Z M 31.25 375 L 187.5 375 L 187.5 531.25 L 31.25 531.25 Z M 31.25 562.5 L 187.5 562.5 L 187.5 718.75 L 31.25 718.75 Z M 31.25 750 L 187.5 750 L 187.5 828.125 C 187.441406 858.976562 169.242188 886.890625 141.046875 899.390625 C 140.59375 899.609375 140.175781 899.925781 139.703125 900.109375 C 135.835938 901.664062 131.835938 902.90625 127.757812 903.832031 C 126.832031 904.058594 125.9375 904.488281 124.992188 904.667969 C 101.996094 909.355469 78.125 903.472656 59.960938 888.632812 C 41.796875 873.789062 31.25 851.585938 31.25 828.125 Z M 31.25 750 "  /><path d="M 109.375 875 C 135.257812 875 156.25 854.007812 156.25 828.125 C 156.25 802.242188 135.257812 781.25 109.375 781.25 C 83.492188 781.25 62.5 802.242188 62.5 828.125 C 62.5 854.007812 83.492188 875 109.375 875 Z M 109.375 812.5 C 118.007812 812.5 125 819.492188 125 828.125 C 125 836.757812 118.007812 843.75 109.375 843.75 C 100.742188 843.75 93.75 836.757812 93.75 828.125 C 93.75 819.492188 100.742188 812.5 109.375 812.5 Z M 109.375 812.5 "  /></svg>
						<span>Второй</span>
					</button>`)

				$('#userCreate .body .wrap').html('')
				for(var i = 0; i < 45; i ++)
				{
					$('#userCreate .body .wrap').append(`
						<button onclick="userCreate.data.pedigree['${underPage}'] = ${i}; $('#userCreate .body .wrap button').removeClass('select'); $(this).addClass('select'); userCreate.updateChar()" class="${userCreate.data.pedigree[underPage] === i ? "select" : ""}" data-id="${i}">
							<img src="src/images/pedigree/pedigree_${i}.png">
						</button>`)
				}
				break
			}
			case 'hair':
			{
				if(underPage === 'default') underPage = 'head'

				rage.send('ui::user:changeCameraCharacter', {
					camera: underPage === 'head' || underPage === 'head' ? 'global' : 'face'
				})

				$('#userCreate .header-right').html(`
					<button onclick="userCreate.updateMenu('hair', 'head')" ${underPage === 'head' ? "class='header-select'" : ""}>
						<svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 28.873 28.873" ><path d="M7.137,21.848l-0.355,7.025h10.137l0.777-3.23c0,0,0.439,0.738,3.06,0.96c2.619,0.222,2.3-2.976,2.3-2.976s1.744-0.77,1.744-1.346c0-0.578-1.032-1.322-1.032-1.322s1.109,0.199,1.512-0.268c0.399-0.467-0.49-2.154-0.49-2.154s1.368-0.035,2.175-0.922c0.805-0.887-2.539-3.509-2.539-5.199c1.892-9.269-5.64-13.511-13.998-12.176c-8.36,1.333-8.046,6.39-8.538,8.803C0.912,15.09,7.137,21.848,7.137,21.848z"/>
						<span>На голове</span>
					</button>
					<button onclick="userCreate.updateMenu('hair', 'eyebrow')" ${underPage === 'eyebrow' ? "class='header-select'" : ""}>
						<svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><ellipse cx="443.626" cy="177.743" rx="20" ry="20" transform="matrix(.383 -.924 .924 .383 109.644 519.581)"/><circle cx="387.216" cy="337.519" r="20"/><path d="m251.295 277.775c125.861 0 260.705 35.959 260.705 35.959v-22.755c-112.367-105.174-228.85-136.498-320.921-136.498-38.738 0-73.149 5.543-101.123 13.464-70.903 20.076-89.956 52.766-89.956 96.891v48.898s107.1-25.992 204.8-34.133c15.167-1.264 30.767-1.826 46.495-1.826z"/></svg>
						<span>Брови</span>
					</button>
					<button onclick="userCreate.updateMenu('hair', 'beard')" ${underPage === 'beard' ? "class='header-select'" : ""}>
						<svg viewBox="0 0 512.033 512.033" xmlns="http://www.w3.org/2000/svg"><path d="m376.016 241.019c-45.993 0-89.857-11.181-120-30.26-30.142 19.079-74.006 30.26-120 30.26-41.738 0-113.732-16.028-134.112-52.716-5.546-9.982 1.686-22.284 13.112-22.284 64.031 0 91.407-30.163 117.883-59.333 20.379-22.454 41.452-45.672 76.575-45.672 15.172 0 31.08 5.717 46.542 16.64 15.463-10.923 31.371-16.64 46.542-16.64 35.123 0 56.196 23.218 76.575 45.672 26.476 29.17 53.852 59.333 117.883 59.333 11.42 0 18.661 12.296 13.112 22.284-20.363 36.66-92.423 52.716-134.112 52.716z"/></g><g><path d="m245.41 446.626c-24.458-29.343-64.394-48.158-64.394-100.606 0-41.355 33.645-75 75-75s75 33.645 75 75c0 52.199-41.44 73.068-64.394 100.606-5.856 5.857-15.354 5.858-21.212 0z"/></svg>
						<span>Борода (Усы)</span>
					</button>
					<button onclick="userCreate.updateMenu('hair', 'breast')" ${underPage === 'breast' ? "class='header-select'" : ""}>
						<svg viewBox="0 0 56 56" xmlns="http://www.w3.org/2000/svg"><path id="Shape" d="m54.255 25.466c-.1146234-.2178187-.1448878-.4702597-.085-.709l1-4c.724-2.9.567-11.834-9.317-14.8-7.317-2.19-10.044-4.464-11.019-5.624-.311309-.21914629-.6833009-.33556857-1.064-.333h-9.54c-.3812988-.00246141-.7537713.11470132-1.065.335-.973 1.158-3.7 3.432-11.018 5.623-9.884 2.965-10.041 11.9-9.316 14.8l1 4c.05882447.2389088.02823633.4910831-.086.709-2.64750772 5.9271515-3.41530279 12.5232092-2.2 18.9.07108135.4332844.41146551.7724601.845.842l4.162.59c.43949344.0663343.86918165-.1689711 1.05-.575 1.42105673-3.1257742 2.660126-6.3311271 3.711-9.6-.063-.358-.128-.719-.2-1.107-.356-1.967-.8-4.416-1.247-8.411-1.042-9.37 4.068-14.6 4.286-14.818.3918367-.379565 1.0155809-.3750451 1.4018758.0101585.3862949.3852037.3925793 1.0089326.0141242 1.4018415-.061.062-4.644 4.823-3.715 13.185.44 3.926.877 6.338 1.228 8.276.086.475.168.924.244 1.364.3740931 2.1376726.5531627 4.304917.535 6.475.0342581 2.9820997-.116029 5.9634623-.45 8.927-.078.815-.168 1.752-.271 2.881-.0522454.5610145.1338563 1.1181369.5127927 1.5351191.3789363.4169821.9157674.6553761 1.4792073.6568809h27.74c.5630746-.0018105 1.0994638-.2401905 1.4781455-.6569116.3786818-.416721.5647863-.9734108.5128545-1.5340884-.1-1.131-.194-2.069-.272-2.884-.3334694-2.9629092-.4837551-5.9435753-.45-8.925-.0178656-2.165677.1605303-4.3285187.533-6.462.078-.45.16-.9.246-1.38.351-1.937.788-4.347 1.227-8.269.937-8.424-3.667-13.135-3.713-13.182-.3789722-.3923789-.3735524-1.0160848.0121814-1.4018186s1.0094397-.3911536 1.4018186-.0121814c.218.218 5.328 5.448 4.287 14.817-.447 3.991-.89 6.438-1.247 8.4-.07.388-.135.752-.2 1.114 1.0507377 3.2675644 2.2904947 6.4712994 3.713 9.595.1773827.4083073.6065808.6468873 1.047.582l4.166-.591c.4343196-.0694617.7754831-.4090141.847-.843 1.2149215-6.3775861.4453412-12.9743374-2.205-18.901zm-21.055-18.066c.3313708-.4418278.9581722-.53137085 1.4-.2 1.4358675 1.02491356 3.3641325 1.02491356 4.8 0 .4418278-.33137085 1.0686292-.2418278 1.4.2s.2418278 1.06862915-.2 1.4c-1.0817589.76766919-2.3735568 1.1838376-3.7 1.192-1.2663433.00040825-2.4971375-.41876509-3.5-1.192-.2121732-.15912989-.3524422-.39602771-.3899495-.65857864s.0308196-.52924817.1899495-.74142136zm7.8 15.6c0 .5522847-.4477153 1-1 1h-2c-.5522847 0-1-.4477153-1-1s.4477153-1 1-1h2c.5522847 0 1 .4477153 1 1zm-23.8-15.6c.3313708-.4418278.9581722-.53137085 1.4-.2 1.4341942 1.03012495 3.3658058 1.03012495 4.8 0 .2858125-.21435937.6642734-.25995645.9928203-.11961526.3285469.14034118.5572656.44529947.6.80000001.0427345.35470055-.1070078.7052559-.3928203.91961525-1.003079.77283151-2.2337315 1.1919566-3.5 1.192-1.3264432-.0081624-2.6182411-.42433081-3.7-1.192-.2121732-.15912989-.3524422-.39602771-.3899495-.65857864s.0308196-.52924817.1899495-.74142136zm.8 14.6h2c.5522847 0 1 .4477153 1 1s-.4477153 1-1 1h-2c-.5522847 0-1-.4477153-1-1s.4477153-1 1-1zm-2.365 4.227c2.9 2.38 5.834 2.381 8.729 0 .2761663-.2268636.6523848-.2891613.9869376-.1634261.3345529.1257352.5766135.4204011.635.773.0583866.3525988-.0757713.7095625-.3519376.9364261-1.5564168 1.3854074-3.5511932 2.1781487-5.634 2.239-2.0826797-.0605743-4.077441-.8529555-5.634-2.238zm17.435 17.773h1.289c1.1216467.0283694 2.1747312-.5382958 2.769-1.49.2706195-.4815923.8804077-.6526195 1.362-.382s.6526195.8804077.382 1.362c-.9422479 1.5886508-2.6663181 2.5475287-4.513 2.51h-1.289c-1.0985408.0007936-2.1705955-.3372354-3.07-.968v2.35c.1358582 1.5650358 1.5031493 2.7310189 3.07 2.618h1.289c1.1216467.0283694 2.1747312-.5382958 2.769-1.49.2706195-.4815923.8804077-.6526195 1.362-.382s.6526195.8804077.382 1.362c-.9422479 1.5886508-2.6663181 2.5475287-4.513 2.51h-1.289c-1.572191.0146433-3.0672674-.6799978-4.07-1.891-1.0027326 1.2110022-2.497809 1.9056433-4.07 1.891h-1.289c-1.8466819.0375287-3.5707521-.9213492-4.513-2.51-.1750602-.3115356-.1706201-.6927998.0116475-1.0001742.1822677-.3073743.5146722-.4941613.872-.49.3573279.0041613.6852924.1986386.8603525.5101742.5942688.9517042 1.6473533 1.5183694 2.769 1.49h1.289c1.5668507.1130189 2.9341418-1.0529642 3.07-2.618v-2.35c-.8994045.6307646-1.9714592.9687936-3.07.968h-1.289c-1.8466819.0375287-3.5707521-.9213492-4.513-2.51-.1750602-.3115356-.1706201-.6927998.0116475-1.0001742.1822677-.3073743.5146722-.4941613.872-.49.3573279.0041613.6852924.1986386.8603525.5101742.5942688.9517042 1.6473533 1.5183694 2.769 1.49h1.289c1.5668507.1130189 2.9341418-1.0529642 3.07-2.618v-2.35c-.8994045.6307646-1.9714592.9687936-3.07.968h-1.289c-1.8466819.0375287-3.5707521-.9213492-4.513-2.51-.1750602-.3115356-.1706201-.6927998.0116475-1.0001742.1822677-.3073743.5146722-.4941613.872-.49.3573279.0041613.6852924.1986386.8603525.5101742.5942688.9517042 1.6473533 1.5183694 2.769 1.49h1.289c1.5668507.1130189 2.9341418-1.0529642 3.07-2.618v-3.382c0-.5522847.4477153-1 1-1s1 .4477153 1 1v3.382c.1358582 1.5650358 1.5031493 2.7310189 3.07 2.618h1.289c1.1216467.0283694 2.1747312-.5382958 2.769-1.49.2706195-.4815923.8804077-.6526195 1.362-.382s.6526195.8804077.382 1.362c-.9422479 1.5886508-2.6663181 2.5475287-4.513 2.51h-1.289c-1.0985408.0007936-2.1705955-.3372354-3.07-.968v2.35c.1358582 1.5650358 1.5031493 2.7310189 3.07 2.618zm9.294-17.772c.4269161-.3507008 1.0572991-.288916 1.4079999.138.3507008.4269161.2889162 1.0572992-.1379999 1.408-1.556559 1.3850445-3.5513203 2.1774257-5.634 2.238-2.0826797-.0605743-4.077441-.8529555-5.634-2.238l1.269-1.547c2.896 2.38 5.834 2.381 8.729.001z"/></svg>
						<span>На груди</span>
					</button>`)

				$('#userCreate .body .wrap').html('')
				userCreate.hair[underPage][gender].forEach((item, i) =>
				{
					$('#userCreate .body .wrap').append(`
						<button class="${userCreate.data.hair[underPage] === item ? "select" : ""}" data-id="${i}">
							<img onclick="userCreate.data.hair['${underPage}'] = ${item}; $('#userCreate .body .wrap button').removeClass('select'); $(this).parent().addClass('select'); userCreate.updateChar()" src="src/images/hair/hair_${underPage}_${gender}_${item}.jpg">
						</button>`)
				})
				break
			}
			case 'settings':
			{
				if(underPage === 'default') underPage = 'main'

				rage.send('ui::user:changeCameraCharacter', {
					camera: underPage === 'main' ? 'global' : 'face'
				})

				$('#userCreate .header-right').html(`
					<button onclick="userCreate.updateMenu('settings', 'main')" ${underPage === 'main' ? "class='header-select'" : ""}>
						<svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 494.839 494.839"><path d="M316.935,133.94H177.917c-8.851,0-16.024,7.174-16.024,16.008v57.533c0,8.851,7.174,16.025,16.024,16.025h139.018c8.83,0,16.01-7.174,16.01-16.025v-57.533C332.945,141.114,325.765,133.94,316.935,133.94z"/><path d="M378.894,0H115.943c-23.066,0-41.82,18.756-41.82,41.812v411.215c0,23.057,18.754,41.813,41.82,41.813c0,0,198.697-0.2,199.053-0.2c6.453,0,9.227-3.195,10.613-4.572l90.201-89.253c4.488-4.629,4.695-9.199,4.695-10.67c0-0.473,0.211-348.332,0.211-348.332C420.716,18.756,401.958,0,378.894,0z M387.683,372.556h-48.398c-23.047,0-41.805,18.756-41.805,41.806v0.007v47.441H115.943c-4.838,0-8.791-3.943-8.791-8.783V41.812c0-4.839,3.953-8.781,8.791-8.781h262.951c4.84,0,8.789,3.942,8.789,8.781V372.556z"/></svg>
						<span>Общие</span>
					</button>
					<button onclick="userCreate.updateMenu('settings', 'face')" ${underPage === 'face' ? "class='header-select'" : ""}>
						<svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 512 512"><path d="M256,0C114.615,0,0,114.615,0,256s114.615,256,256,256s256-114.615,256-256S397.385,0,256,0z M256,480C132.288,480,32,379.712,32,256S132.288,32,256,32s224,100.288,224,224S379.712,480,256,480z"/><circle cx="176" cy="176" r="32"/><circle cx="336" cy="176" r="32"/><rect x="144" y="304" width="224" height="32"/></svg>
						<span>Лицо</span>
					</button>
					<button onclick="userCreate.updateMenu('settings', 'appearance')" ${underPage === 'appearance' ? "class='header-select'" : ""}>
						<svg viewBox="1 -77 511.99997 511" xmlns="http://www.w3.org/2000/svg"><path d="m430.28125 211.699219c-57.09375-40.972657-117.5-62.628907-174.683594-62.628907s-117.585937 21.65625-174.683594 62.628907c-42.710937 30.648437-68.496093 61.066406-69.570312 62.34375l-11.34375 13.484375 15.144531 9c1.078125.640625 26.890625 15.867187 69.4375 31.132812 39.148438 14.046875 100.597657 30.789063 171.015625 30.789063 70.417969 0 131.867188-16.742188 171.015625-30.789063 42.546875-15.265625 68.359375-30.492187 69.4375-31.132812l15.144531-9-11.34375-13.480469c-1.074218-1.28125-26.855468-31.699219-69.570312-62.347656zm-20.554688 22.09375c-50.445312-16.683594-102.035156-25.117188-154.128906-25.117188-52.089844 0-103.679687 8.433594-154.125 25.117188 36.1875-25.425781 91.550782-54.8125 154.125-54.8125 62.574219 0 117.9375 29.386719 154.128906 54.8125zm-79.351562 19.96875c0 41.230469-33.542969 74.777343-74.777344 74.777343s-74.777344-33.546874-74.777344-74.777343c0-2.941407.175782-5.871094.515626-8.773438 10.402343-1.714843 20.828124-3.054687 31.269531-4.046875-1.214844 4.066406-1.875 8.363282-1.875 12.820313 0 24.738281 20.128906 44.867187 44.867187 44.867187 24.742188 0 44.867188-20.128906 44.867188-44.867187 0-4.457031-.660156-8.753907-1.875-12.820313 10.441406.992188 20.867187 2.332032 31.269531 4.046875.339844 2.902344.515625 5.832031.515625 8.773438zm-59.820312 0c0 8.246093-6.710938 14.953125-14.957032 14.953125s-14.957031-6.707032-14.957031-14.953125c0-7.679688 5.820313-14.019531 13.28125-14.855469 1.117187-.003906 2.234375-.003906 3.351563 0 7.460937.835938 13.28125 7.175781 13.28125 14.855469zm-214.210938 30.09375c30.984375-14.394531 62.625-25.320313 94.605469-32.804688-.023438.902344-.042969 1.804688-.042969 2.710938 0 25.65625 9.285156 49.179687 24.660156 67.40625-51.816406-9.390625-93.953125-25.785157-119.222656-37.3125zm279.257812 37.347656c15.390626-18.230469 24.6875-41.769531 24.6875-67.441406 0-.90625-.019531-1.808594-.042968-2.710938 31.992187 7.484375 63.648437 18.421875 94.644531 32.824219-25.242187 11.539062-67.363281 27.945312-119.289063 37.328125zm0 0"/><path d="m369.242188 13.316406c-16.445313-11.097656-36.242188-15.179687-55.734376-11.492187l-280.558593 53.074219c-31.945313 6.042968-42.160157 46.675781-16.949219 67.132812 20.582031 16.695312 47.246094 23.167969 73.144531 17.824219l257.917969-53.222657 164.9375 25.230469-142.628906-98.457031zm-22.960938 42.9375-263.179688 54.308594c-17.109374 3.527344-34.695312-.757812-48.257812-11.761719-5.445312-4.417969-3.277344-13.199219 3.664062-14.511719l280.558594-53.074218c11.328125-2.144532 23.238282.03125 33.378906 6.851562l35.601563 24.578125zm0 0"/></svg>
						<span>Внешность</span>
					</button>`)

				$('#userCreate .body .wrap').html('')
				if(underPage === 'main')
				{
					$('#userCreate .body .wrap').html(`
						<div class="wrap-section">
							<div class="input-range">
								<h5>Похож на</h5>

								<section>
									<span>Мать</span>
									<input data-range-type="float" data-range-id="userCreate.data.pedigree.looks" type="range" min="0" max="1" value="${userCreate.data.pedigree.looks}" step="0.1">
									<span>Отца</span>
								</section>
							</div>
							<div class="input-range">
								<h5>Тон кожи</h5>

								<section>
									<span>Мать</span>
									<input data-range-type="float" data-range-id="userCreate.data.pedigree.skin" type="range" min="0" max="1" value="${userCreate.data.pedigree.skin}" step="0.1">
									<span>Отца</span>
								</section>
							</div>
						</div>
						<div class="wrap-section">
							<div class="input-range">
								<h5>Цвет волос</h5>

								<section>
									<input data-range-type="int" data-range-id="userCreate.data.hair.color" type="range" min="0" max="63" value="${userCreate.data.hair.color}" step="1">
								</section>
							</div>
						</div>`)
				}
				else if(underPage === 'face')
				{
					const names = [
						'Ширина носа',
						'Высота носа',
						'Длина носа',
						'Переносице',
						'Кончик носа',
						'Сдвиг переносицы',
						'Высота бровей',
						'Ширина бровей',
						'Высота скул',
						'Ширина скул',
						'Ширина щек',
						'Глаза',
						'Губы',
						'Ширина челюсти',
						'Высота челюсти',
						'Длина подбородка',
						'Положение подбородка',
						'Ширина подбородка',
						'Форма подбородка',
						'Шея' ]

					names.forEach((item, i) =>
					{
						$('#userCreate .body .wrap').append(`
							<div class="input-range">
								<h5>${item}</h5>

								<section>
									<input data-range-type="float" data-range-id="userCreate.data.face[${i}]" type="range" min="-1" max="1" value="${userCreate.data.face[i]}" step="0.1">
								</section>
							</div>`)
					})
				}
				else if(underPage === 'appearance')
				{
					const names = [
						'Цвет глаз',
						'Пятна на лице',
						'Старение',
						'Цвет лица',
						'Повреждения кожи',
						'Губная помада',
						'Цвет помады',
						'Родинки',
						'Пятна на теле' ]
					const max = [
						31, 23, 14, 11, 10, 9, 63, 17, 11
					]

					names.forEach((item, i) =>
					{
						$('#userCreate .body .wrap').append(`
							<div class="input-range">
								<h5>${item}</h5>

								<section>
									<input data-range-type="float" data-range-id="userCreate.data.appearance[${i}]" type="range" min="0" max="${max[i]}" value="${userCreate.data.appearance[i]}" step="1">
								</section>
							</div>`)
					})
				}
				break
			}
		}
	},
	updateChar: () =>
	{
		rage.send('ui::user:updateCharacter', {
			settings: userCreate.data,
			gender: $('#userCreate .userCreate-gender.button-select').attr('data-gender') === 'male' ? 0 : 1
		})
	},
	random: () =>
	{
		const gender = $('#userCreate .userCreate-gender.button-select').attr('data-gender')
		if(gender !== 'male'
			&& gender !== 'female')
		{
			gender = 'male'
			setGender('male')
		}

		userCreate.data.pedigree.one = parseInt(Math.random() * (45 - 0) + 0)
		userCreate.data.pedigree.two = parseInt(Math.random() * (45 - 0) + 0)
		userCreate.data.pedigree.looks = parseFloat((Math.random() * (1.01 - 0) + 0).toFixed(1))
		userCreate.data.pedigree.skin = parseFloat((Math.random() * (1.01 - 0) + 0).toFixed(1))

		userCreate.data.hair.color = parseInt(Math.random() * (64 - 0) + 0)
		userCreate.data.hair.head = userCreate.hair.head[gender][parseInt(Math.random() * (userCreate.hair.head[gender].length - 0) + 0)]
		userCreate.data.hair.eyebrow = userCreate.hair.eyebrow[gender][parseInt(Math.random() * (33 - 0) + 0)]
		userCreate.data.hair.beard = userCreate.hair.beard[gender][parseInt(Math.random() * (28 - 0) + 0)]
		userCreate.data.hair.breast = userCreate.hair.breast[gender][parseInt(Math.random() * (16 - 0) + 0)]

		const appearanceMax = [
			32, 29, 15, 12, 11, 10, 64, 18, 12
		]

		userCreate.data.face.forEach((item, i) => userCreate.data.face[i] = (Math.random() * (1.01 - -1.01) + -1.01).toFixed(1))
		userCreate.data.appearance.forEach((item, i) => userCreate.data.appearance[i] = Math.random() * (appearanceMax[i] - 0) + 0)

		eval($('#userCreate .header-right button.header-select').attr('onclick'))
		userCreate.updateChar()
	},
	go: () =>
	{
		const
			firstName = $('#userCreate #userCreate-first-name').val(),
			lastName = $('#userCreate #userCreate-last-name').val()

			dateBirth =
			{
				day: parseInt($('#userCreate #userCreate-birth-date input:nth-child(2)').val()),
				month: parseInt($('#userCreate #userCreate-birth-date input:nth-child(3)').val()),
				year: parseInt($('#userCreate #userCreate-birth-date input:nth-child(4)').val()),

				hours: new Date().getHours(),
				minutes: new Date().getMinutes(),
				seconds: new Date().getSeconds()
			}

		function goError(input, error)
        {
            $(input).parent().find('span').remove()
            $(input).parent().append(`<span>${error}</span>`)
        }

		$('#userCreate #userCreate-first-name').parent().find('span').remove()
		$('#userCreate #userCreate-last-name').parent().find('span').remove()

		$('#userCreate #userCreate-birth-date').parent().find('span').remove()

		if(firstName.length < 4)return goError('#userCreate #userCreate-first-name', 'Длина имени не должна быть меньше 4х символов!')
		if(lastName.length < 4)return goError('#userCreate #userCreate-last-name', 'Длина фамилии не должна быть меньше 4х символов!')

		if(!dateBirth.day
			|| dateBirth.day < 1 || dateBirth.day > 31)return goError('#userCreate #userCreate-birth-date input:nth-child(2)', 'Не верный номер дня!')
		if(!dateBirth.month
			|| dateBirth.month < 1 || dateBirth.month > 12)return goError('#userCreate #userCreate-birth-date input:nth-child(3)', 'Не верный номер месяца!')
		if(!dateBirth.year
			|| dateBirth.year < 1980 || dateBirth.year > 2003)return goError('#userCreate #userCreate-birth-date input:nth-child(4)', 'Год должен быть от 1980, до 2003')

		rage.send('ui::user:saveCharacter', {
			settings: userCreate.data,
			gender: $('#userCreate .userCreate-gender.button-select').attr('data-gender') === 'male' ? 0 : 1,

			firstName: firstName,
			lastName: lastName,

			dateBirth: new Date(dateBirth.year, dateBirth.month, dateBirth.day, dateBirth.hours, dateBirth.minutes, dateBirth.seconds)
		})
		rage.addEvent('UI::userCreate:errorCharName', () =>
		{
			goError('#userCreate #userCreate-first-name', 'Персонаж с данным именем и фамилией уже существует!')
		})
	}
}

$(document).ready(() =>
{
	rage.addEvent('UI::userCreate', results =>
	{
		switch(results.cmd)
		{
			case 'toggle':
			{
				userCreate.toggle(results.data)
				break
			}
			case 'update':
			{
				userCreate.data = results.data
				userCreate.updateMenu('pedigree')
			}
		}
	})

	$('body').append(`
		<div id="userCreate" style="display: none;">
			<div class="pers">
				<div class="header">
					<button onclick="userCreate.updateMenu('pedigree')" class="header-select" id="userCreate-header-pedigree">
						<svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m402.81 232.25c-60.21 0-109.2 48.98-109.2 109.19s48.99 109.19 109.2 109.19 109.19-48.98 109.19-109.19-48.98-109.19-109.19-109.19zm61.96 89.98-64.65 64.64c-5.82 5.84-15.34 5.87-21.21 0l-38.06-38.07c-5.86-5.86-5.86-15.36 0-21.21 5.85-5.86 15.35-5.86 21.21 0l27.46 27.46 54.03-54.04c5.86-5.85 15.36-5.85 21.22 0 5.85 5.86 5.85 15.36 0 21.22z"/><path d="m263.61 341.44c0-76.75 62.44-139.19 139.2-139.19.51 0 1.01 0 1.52.01v-187.26c0-8.28-6.72-15-15-15h-374.33c-8.28 0-15 6.72-15 15v482c0 8.28 6.72 15 15 15h374.33c8.28 0 15-6.72 15-15v-16.38c-.51.01-1.01.01-1.52.01-76.76 0-139.2-62.44-139.2-139.19zm.94-272.05h84.78c8.28 0 15 6.71 15 15 0 8.28-6.72 15-15 15h-84.78c-8.29 0-15-6.72-15-15 0-8.29 6.71-15 15-15zm-83.75 3.44c7.95 0 14.39 6.44 14.39 14.39 0 7.94-6.44 14.38-14.39 14.38-7.94 0-14.38-6.44-14.38-14.38 0-7.95 6.44-14.39 14.38-14.39zm-63.21-27.83c7.95 0 14.39 6.44 14.39 14.39 0 7.94-6.44 14.38-14.39 14.38-7.94 0-14.38-6.44-14.38-14.38 0-7.95 6.44-14.39 14.38-14.39zm0 45.78c14.02 0 27.21 5.46 37.12 15.37l19.83 19.84c15.531 15.51 15.61 40.656.09 56.28-.03.03-.06.05-.09.08-14.555 14.555-39.242 16.831-56.95-.58-8.425 8.423-18.289 12.26-28.76 12.26 1 0-15.225 1.286-28.19-11.68-15.54-15.54-15.53-40.82 0-56.36l19.83-19.83c9.92-9.92 23.1-15.38 37.12-15.38zm-63.2-17.95c7.94 0 14.38 6.44 14.38 14.39 0 7.94-6.44 14.38-14.38 14.38-7.95 0-14.39-6.44-14.39-14.38 0-7.95 6.44-14.39 14.39-14.39zm153.81 379.17h-153.2c-8.28 0-15-6.72-15-15s6.72-15 15-15h153.2c8.29 0 15 6.72 15 15s-6.71 15-15 15zm0-60h-153.2c-8.28 0-15-6.72-15-15s6.72-15 15-15h153.2c8.29 0 15 6.72 15 15s-6.71 15-15 15zm15-80c0 8.28-6.71 15-15 15h-153.2c-8.28 0-15-6.72-15-15v-68.97c0-8.29 6.72-15 15-15h153.2c8.29 0 15 6.71 15 15zm26.35-167.61c0-8.29 6.71-15 15-15h84.78c8.28 0 15 6.71 15 15 0 8.28-6.72 15-15 15h-84.78c-8.29 0-15-6.72-15-15z"/><path d="m70 258.03h123.2v38.97h-123.2z"/><path d="m95.79 161.14 11.19-11.19c5.845-5.845 15.358-5.862 21.22 0l11.19 11.19c3.848 3.848 10.052 3.847 13.89.05.02-.02.03-.04.05-.05 3.854-3.854 3.857-10.083 0-13.94l-19.83-19.83c-8.775-8.775-22.997-8.813-31.81 0l-19.83 19.83c-3.84 3.84-3.85 10.1 0 13.94 3.857 3.857 10.076 3.855 13.93 0z"/></svg>
						<span>Стиль персонажа</span>
					</button>
					<button onclick="userCreate.updateMenu('hair')" id="userCreate-header-hair">
						<svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 31.355 31.355"><path d="M26.228,10.975c0,4.261-10.922,5.868-12.229,8.337c-1.307,2.469-5.461,6.746,2.872,12.043c-1.383-0.667-11.674-4.909-14.822-15.101c-3.15-10.19,11.58-22.697,21.399-12.414C34.01,4.49,28.08,16.904,28.08,16.904S27.667,9.993,26.228,10.975z"/></svg>
						<span>Волосы</span>
					</button>
					<button onclick="userCreate.updateMenu('settings')" id="userCreate-header-settings">
						<svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 512 512" ><path d="M496.659,312.107l-47.061-36.8c0.597-5.675,1.109-12.309,1.109-19.328c0-7.019-0.491-13.653-1.109-19.328l47.104-36.821c8.747-6.912,11.136-19.179,5.568-29.397L453.331,85.76c-5.227-9.557-16.683-14.464-28.309-10.176l-55.531,22.293c-10.645-7.68-21.803-14.165-33.344-19.349l-8.448-58.901C326.312,8.448,316.584,0,305.086,0h-98.133c-11.499,0-21.205,8.448-22.571,19.456l-8.469,59.115c-11.179,5.035-22.165,11.435-33.28,19.349l-55.68-22.357C76.52,71.531,64.04,76.053,58.856,85.568L9.854,170.347c-5.781,9.771-3.392,22.464,5.547,29.547l47.061,36.8c-0.747,7.189-1.109,13.44-1.109,19.307s0.363,12.117,1.109,19.328l-47.104,36.821c-8.747,6.933-11.115,19.2-5.547,29.397l48.939,84.672c5.227,9.536,16.576,14.485,28.309,10.176l55.531-22.293c10.624,7.659,21.781,14.144,33.323,19.349l8.448,58.88C185.747,503.552,195.454,512,206.974,512h98.133c11.499,0,21.227-8.448,22.592-19.456l8.469-59.093c11.179-5.056,22.144-11.435,33.28-19.371l55.68,22.357c2.688,1.045,5.483,1.579,8.363,1.579c8.277,0,15.893-4.523,19.733-11.563l49.152-85.12C507.838,331.349,505.448,319.083,496.659,312.107z M256.019,341.333c-47.061,0-85.333-38.272-85.333-85.333s38.272-85.333,85.333-85.333s85.333,38.272,85.333,85.333S303.08,341.333,256.019,341.333z"/>
						<span>Настройки</span>
					</button>
				</div>
				<div class="body">
					<div class="wrap"></div>
				</div>
				<div class="header header-right"></div>
			</div>
			<div class="info">
				<h1>Создание персонажа</h1>
				<div class="inputs">
					<div class="input">
						<input id="userCreate-first-name" type="text" placeholder=" " maxlength="16">
						<label for="userCreate-first-name">Имя</label>
						<svg viewBox="0 -43 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m453.332031 42.667969h-112v-5.335938c0-20.585937-16.746093-37.332031-37.332031-37.332031h-96c-20.585938 0-37.332031 16.746094-37.332031 37.332031v5.335938h-112c-32.363281 0-58.667969 26.300781-58.667969 58.664062v266.667969c0 32.363281 26.304688 58.667969 58.667969 58.667969h394.664062c32.363281 0 58.667969-26.304688 58.667969-58.667969v-266.667969c0-32.363281-26.304688-58.664062-58.667969-58.664062zm-154.644531 42.664062h-85.355469v-42.664062h85.335938zm-138.6875 64c29.398438 0 53.332031 23.9375 53.332031 53.335938 0 29.394531-23.933593 53.332031-53.332031 53.332031s-53.332031-23.9375-53.332031-53.332031c0-29.398438 23.933593-53.335938 53.332031-53.335938zm96 197.335938c0 8.832031-7.167969 16-16 16h-160c-8.832031 0-16-7.167969-16-16v-10.667969c0-32.363281 26.304688-58.667969 58.667969-58.667969h74.664062c32.363281 0 58.667969 26.304688 58.667969 58.667969zm176 16h-117.332031c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h117.332031c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0-85.335938h-117.332031c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h117.332031c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0-85.332031h-117.332031c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h117.332031c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0"/></svg>
					</div>
					<div class="input">
						<input type="text" id="userCreate-last-name" placeholder=" " maxlength="16">
						<label for="userCreate-last-name">Фамилия</label>
						<svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><g><path d="m332.794 60.998-45.041 66.061c3.636 5.777 5.747 12.611 5.747 19.941 0 20.711-16.789 37.5-37.5 37.5s-37.5-16.789-37.5-37.5 16.789-37.5 37.5-37.5c2.382 0 4.709.232 6.967.656l41.512-60.885c-15.335-4.722-31.615-7.271-48.479-7.271s-33.143 2.549-48.479 7.271l-29.128-42.72c-4.667-6.844-13.997-8.61-20.844-3.943-6.845 4.667-8.61 13.999-3.943 20.844l25.6 37.546c-52.404 27.675-88.206 82.731-88.206 146.002v140c0 90.981 74.019 165 165 165s165-74.019 165-165v-140c0-63.27-35.802-118.327-88.206-146.002zm-6.794 336.002h-140c-8.284 0-15-6.716-15-15s6.716-15 15-15h140c8.284 0 15 6.716 15 15s-6.716 15-15 15zm0-60h-140c-8.284 0-15-6.716-15-15s6.716-15 15-15h140c8.284 0 15 6.716 15 15s-6.716 15-15 15zm0-60h-140c-8.284 0-15-6.716-15-15s6.716-15 15-15h140c8.284 0 15 6.716 15 15s-6.716 15-15 15z"/><path d="m358.394 23.452c4.667-6.845 2.901-16.177-3.943-20.844-6.846-4.667-16.178-2.901-20.844 3.943l-29.127 42.72c9.863 3.038 19.331 6.982 28.315 11.726z"/></g></svg>
					</div>
					<div class="input-date" id="userCreate-birth-date">
						<h5>Дата рождения</h5>

						<input type="text" maxlength="2" placeholder="День">
						<input type="text" maxlength="2" placeholder="Месяц">
						<input type="text" maxlength="4" placeholder="Год">
					</div>
					<div class="input-date" style="margin-top: 15px;">
						<h5>Гендер</h5>

						<button onclick="userCreate.setGender('male')" data-gender="male" class="button button-select userCreate-gender">Мужской</button>
						<button onclick="userCreate.setGender('female')" data-gender="female" class="button userCreate-gender">Женский</button>
					</div>
				</div>
				<div class="btns">
					<button class="button userCreate-random-btn" onclick="userCreate.random()">Рандомный выбор</button>
					<button class="button" onclick="userCreate.go()">Создать персонажа</button>
				</div>
			</div>
		</div>`)

	$('#userCreate .body .wrap').on('input', 'input[type="range"]', elem =>
	{
		const
			type = $(elem.target).attr('data-range-type'),
			id = $(elem.target).attr('data-range-id'),

			value = $(elem.target).val()

		if(!type || !id || !value)return

		const code = `${id} = ${value}`
		eval(code)

		userCreate.updateChar()
	})
	$('#userCreate #userCreate-birth-date input').on('input', elem =>
	{
		$(elem.currentTarget).val($(elem.currentTarget).val().replace(/\D+/g,""))
		$(elem.currentTarget).parent().find('span').remove()
	})
	$('#userCreate input').on('input', elem =>
	{
		$(elem.currentTarget).parent().find('span').remove()
	})
})
